version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro  # Mount the Prometheus configuration file
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml:ro  # Mount the Prometheus alert rules file
    ports:
      - "9090:9090"  # Expose Prometheus on port 9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro  # Mount the Alertmanager configuration file
    ports:
      - "9093:9093"  # Expose Alertmanager on port 9093
    networks:
      - monitoring
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"  # Expose cAdvisor on port 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    pid: "host"  # Allows node_exporter to see the host system's metrics
    ports:
      - "9100:9100"  # Expose Node Exporter on port 9100
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - /:/host:ro,rslave  # Required to gather host-level metrics

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Expose Grafana on port 3000
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Set a default admin password (change as needed)
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge
